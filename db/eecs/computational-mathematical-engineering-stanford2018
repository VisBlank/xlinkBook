CME10 | How to learn Mathematics - New ideas from the science of learning | http://CME10.stanford.edu | instructors:Boaler, J. (PI) description:This course will help provide the transition from high school to college learning and encourage the positive ideas and mindsets that shape productive learning. We willnconsider what learning theories have to tell us about mathematics learning, the nature of good teaching and the reasons for ongoing inequities in mathematics learning and participation. This seminar is for those who would like a more positive relationship with mathematics, and are interested in learning about ways to tackle education inequalities. Learning goals: First, it introduces students to theories of learning and in particular the learning of mathematics. Mathematics plays a key role in many students¿ learning identities and is often the cause of low self-esteem and anxiety. Research tells us that this is because mathematics in the US is taught in highly ineffective ways. Indeed there is a large gap between what we know works from research and what happens in most mathematics classrooms. This seminar will give participants an understanding of ways to relate positively to mathematics, to learn mathematics most productively and some of the learning barriers that often deny students the opportunity to engage with mathematics in productive ways.nSecond, the course will teach students about the inequalities that pervade the education system in the United States. We will examine the barriers to the participation of women and students of color and we will consider why social class and race are both strong predictors of mathematics achievement. It is hoped that students will leave the course with greater knowledge of why mathematics is important - to themselves and to the future of society.nCourse participants will be given the opportunity to take part in a mathematics camp, designed to change the pathways of middle school students, similar to this previous camp: https://www.youcubed.org/solving-math- problem/ and to take part in the work of youcubed.org. if they wish.
CME100 | Vector Calculus for Engineers | http://CME100.stanford.edu | instructors:Khayms, V. (PI); Le, H. (PI); Osgood, B. (PI); Aboumrad, G. (TA); Ahn, S. (TA); Barnes, L. (TA); Bougdal-Lambert, I. (TA); Brown, E. (TA); Corey, N. (TA); El Assad, A. (TA); Fournier-Bidoz, E. (TA); Harvey, B. (TA); Homma, Y. (TA); Infanger, A. (TA); Krason, M. (TA); Lin, Z. (TA); Mantravadi, S. (TA); Pearson, M. (TA); Sanchez, S. (TA); Skochdopole, N. (TA); Slottje, A. (TA); Suo, X. (TA); Tazhimbetov, N. (TA); Yin, H. (TA) description:Computation and visualization using MATLAB.  Differential vector calculus:  analytic geometry in space, functions of several variables, partial derivatives, gradient, unconstrained maxima and minima, Lagrange multipliers. Introduction to linear algebra: matrix operations, systems of algebraic equations, methods of solution and applications. Integral vector calculus:  multiple integrals in Cartesian, cylindrical, and spherical coordinates, line integrals, scalar potential, surface integrals, Green¿s, divergence, and Stokes¿ theorems.  Examples and applications drawn from various engineering fields. Prerequisites: 10 units of AP credit (Calc BC with 5, or Calc AB with 5 or placing out of the single variable math placement test: https://exploredegrees-nextyear.stanford.edu/undergraduatedegreesandprograms/#aptextt), or Math 19-21.
CME100A | Vector Calculus for Engineers, ACE | http://CME100A.stanford.edu | instructors:Khayms, V. (PI); Le, H. (PI); Osgood, B. (PI); Aboumrad, G. (TA); Ahn, S. (TA); Barnes, L. (TA); Bougdal-Lambert, I. (TA); Brown, E. (TA); Corey, N. (TA); El Assad, A. (TA); Fournier-Bidoz, E. (TA); Harvey, B. (TA); Homma, Y. (TA); Infanger, A. (TA); Krason, M. (TA); Lin, Z. (TA); Mantravadi, S. (TA); Pearson, M. (TA); Sanchez, S. (TA); Skochdopole, N. (TA); Slottje, A. (TA); Suo, X. (TA); Tazhimbetov, N. (TA); Yin, H. (TA) description:Students attend CME100/ENGR154 lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Enrollment by department permission only. Prerequisite: must be enrolled in the regular CME100-01 or 02. Application at: https://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME102 | Ordinary Differential Equations for Engineers | http://CME102.stanford.edu | instructors:Le, H. (PI); Moin, P. (PI); Ahn, S. (TA); Amidi, S. (TA); DePaul, G. (TA); Elhafsi, A. (TA); Fournier-Bidoz, E. (TA); Gallegos Ortega, D. (TA); Infanger, A. (TA); Lachevre, P. (TA); Patel, H. (TA); Wang, R. (TA); Westhoff, P. (TA); Wu, H. (TA) description:Analytical and numerical methods for solving ordinary differential equations arising in engineering applications: Solution of initial and boundary value problems, series solutions, Laplace transforms, and nonlinear equations; numerical methods for solving ordinary differential equations, accuracy of numerical methods, linear stability theory, finite differences. Introduction to MATLAB programming as a basic tool kit for computations. Problems from various engineering fields. Prerequisite: 10 units of AP credit (Calc BC with 5, or Calc AB with 5 or placing out of the single variable math placement test: https://exploredegreesnextyear.stanford.edu/undergraduatedegreesandprograms/#aptextt),), or Math 19-21. Recommended: CME100.
CME102A | Ordinary Differential Equations for Engineers, ACE | http://CME102A.stanford.edu | instructors:Le, H. (PI); Moin, P. (PI) description:Students attend CME102/ENGR155A lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Prerequisite: students must be enrolled in the regular section (CME102) prior to submitting application at:nhttps://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME103 | Introduction to Matrix Methods | http://CME103.stanford.edu | instructors:Boyd, S. (PI); Osgood, B. (PI); Tse, D. (PI); Angeris, G. (TA); Chang, S. (TA); Daniel, J. (TA); Degleris, A. (TA); Go, C. (TA); Harvey, B. (TA); Jani, T. (TA); Jimenez, S. (TA); Kamath, G. (TA); Li, L. (TA); Lin, J. (TA); Nishimura, M. (TA); Patel, N. (TA); Pathak, R. (TA); Prakash, L. (TA); Sholar, J. (TA); Spear, L. (TA) description:Introduction to applied linear algebra with emphasis on applications. Vectors, norm, and angle; linear independence and orthonormal sets; applications to document analysis. Clustering and the k-means algorithm.  Matrices, left and right inverses, QR factorization. Least-squares and model fitting, regularization and cross-validation.  Constrained and nonlinear least-squares.  Applications include time-series prediction, tomography, optimal control, and portfolio optimization. Undergraduate students should enroll for 5 units, and graduate students should enroll for 3 units. Prerequisites:MATH 51 or CME 100, and basic knowledge of computing (CS 106A is more than enough, and can be taken concurrently). EE103/CME103 and Math 104 cover complementary topics in applied linear algebra. The focus of EE103 is on a few linear algebra concepts, and many applications; the focus of Math 104 is on algorithms and concepts.
CME104 | Linear Algebra and Partial Differential Equations for Engineers | http://CME104.stanford.edu | instructors:Khayms, V. (PI); Chen, E. (TA); Fournier-Bidoz, E. (TA) description:Linear algebra: matrix operations, systems of algebraic equations, Gaussian elimination, undetermined and overdetermined systems, coupled systems of ordinary differential equations, eigensystem analysis, normal modes. Fourier series with applications, partial differential equations arising in science and engineering, analytical solutions of partial differential equations. Numerical methods for solution of partial differential equations: iterative techniques, stability and convergence, time advancement, implicit methods, von Neumann stability analysis. Examples and applications from various engineering fields. Prerequisite: CME 102/ENGR 155A.
CME104A | Linear Algebra and Partial Differential Equations for Engineers, ACE | http://CME104A.stanford.edu | instructors:Khayms, V. (PI) description:Students attend CME104/ENGR155B lectures with additional recitation sessions; two to four hours per week, emphasizing engineering mathematical applications and collaboration methods. Prerequisite: students must be enrolled in the regular section (CME104) prior to submitting application at: https://engineering.stanford.edu/students/programs/engineering-diversity-programs/additional-calculus-engineers
CME106 | Introduction to Probability and Statistics for Engineers | http://CME106.stanford.edu | instructors:Khayms, V. (PI); Amidi, S. (TA); Chen, G. (TA); Chhor, G. (TA); Chu, C. (TA); Lakshman, V. (TA); Pyron, J. (TA); Sagastuy Brena, J. (TA); Wu, Y. (TA) description:Probability: random variables, independence, and conditional probability; discrete and continuous distributions, moments, distributions of several random variables. Topics in mathematical statistics: random sampling, point estimation, confidence intervals, hypothesis testing, non-parametric tests, regression and correlation analyses; applications in engineering, industrial manufacturing, medicine, biology, and other fields. Prerequisite: CME 100/ENGR154 or MATH 51 or 52.
CME108 | Introduction to Scientific Computing | http://CME108.stanford.edu | instructors:Aboumrad, G. (PI); Dunham, E. (PI); An, J. (TA); Lyman, L. (TA); Pearson, M. (TA) description:Introduction to Scientific Computing Numerical computation for mathematical, computational, physical sciences and engineering: error analysis, floating-point arithmetic, nonlinear equations, numerical solution of systems of algebraic equations, banded matrices, least squares, unconstrained optimization, polynomial interpolation, numerical differentiation and integration, numerical solution of ordinary differential equations, truncation error, numerical stability for time dependent problems and stiffness. Implementation of numerical methods in MATLAB programming assignments. Prerequisites: MATH 51, 52, 53; prior programming experience (MATLAB or other language at level of CS 106A or higher).
CME151A | Interactive Data Visualization in D3 | http://CME151A.stanford.edu | instructors:Camelo Gomez, S. (PI) description:This four-week short course introduces D3, a powerful tool for creating interactive data visualizations on the web (d3js.org). The class is geared toward scientists and engineers who want to better communicate their personal projects and research through visualizations on the web. The class will cover the basics of D3: inputting data, creating scales and axes, and adding transitions and interactivity, as well as some of the most used libraries: stack, cluster and force layouts. The class will be based on short workshops and a final project. A background in programming methodology at the level of CS106A is assumed. The course will make use of Javascript, experience is recommended but not necessary.
CME192 | Introduction to MATLAB | http://CME192.stanford.edu | instructors:Camelo Gomez, S. (PI); Gerrard, D. (PI) description:This short course runs for the first four weeks/eight lectures of the quarter and is offered each quarter during the academic year.  It is highly recommended for students with no prior programming experience who are expected to use MATLAB in math, science, or engineering courses.  It will consist of interactive lectures and application-based assignments.nThe goal of the short course is to make students fluent in MATLAB and to provide familiarity with its wide array of features.  The course covers an introduction of basic programming concepts, data structures, and control/flow; and an introduction to scientific computing in MATLAB, scripts, functions, visualization, simulation, efficient algorithm implementation, toolboxes, and more.
CME193 | Introduction to Scientific Python | http://CME193.stanford.edu | instructors:Perricone, J. (PI); Ammerlaan, R. (TA) description:This short course runs for the first four weeks of the quarter. It is recommended for students who are familiar with programming at least at the level of CS106A and want to translate their programming knowledge to Python with the goal of becoming proficient in the scientific computing and data science stack. Lectures will be interactive with a focus on real world applications of scientific computing. Technologies covered include Numpy, SciPy, Pandas, Scikit-learn, and others. Topics will be chosen from Linear Algebra, Optimization, Machine Learning, and Data Science. Prior knowledge of programming will be assumed, and some familiarity with Python is helpful, but not mandatory.
CME195 | Introduction to R | http://CME195.stanford.edu | instructors:Nguyen, L. (PI); Sesia, M. (PI) description:This short course runs for four weeks beginning in the second week of the quarter and is offered in fall and spring.  It is recommended for students who want to use R in statistics, science, or engineering courses and for students who want to learn the basics of R programming. The goal of the short course is to familiarize students with R's tools for scientific computing. Lectures will be interactive with a focus on learning by example, and assignments will be application-driven. No prior programming experience is needed. Topics covered include basic data structures, File I/O, graphs, control structures, etc, and some useful packages in R.
CME200 | Linear Algebra with Application to Engineering Computations | http://CME200.stanford.edu | instructors:Gerritsen, M. (PI); Ganguli, S. (TA); Gnanasekaran, A. (TA); Lyman, L. (TA); Tazhimbetov, N. (TA) description:Computer based solution of systems of algebraic equations obtained from engineering problems and eigen-system analysis, Gaussian elimination, effect of round-off error, operation counts, banded matrices arising from discretization of differential equations, ill-conditioned matrices, matrix theory, least square solution of unsolvable systems, solution of non-linear algebraic equations, eigenvalues and eigenvectors, similar matrices, unitary and Hermitian matrices, positive definiteness, Cayley-Hamilton theory and function of a matrix and iterative methods. Prerequisite: familiarity with computer programming, and MATH51.
CME204 | Partial Differential Equations in Engineering | http://CME204.stanford.edu | instructors:Lele, S. (PI); Ghate, A. (TA); Le Cleac'h, S. (TA); Nantermoz, C. (TA); Song, H. (TA) description:Geometric interpretation of partial differential equation (PDE) characteristics; solution of first order PDEs and classification of second-order PDEs; self-similarity; separation of variables as applied to parabolic, hyperbolic, and elliptic PDEs; special functions; eigenfunction expansions; the method of characteristics. If time permits, Fourier integrals and transforms, Laplace transforms. Prerequisite: CME 200/ME 300A, equivalent, or consent of instructor.
CME206 | Introduction to Numerical Methods for Engineering | http://CME206.stanford.edu | instructors:Marsden, A. (PI); Lee, H. (TA); Leibovich, M. (TA); Verma, A. (TA) description:Numerical methods from a user's point of view. Lagrange interpolation, splines. Integration: trapezoid, Romberg, Gauss, adaptive quadrature; numerical solution of ordinary differential equations: explicit and implicit methods, multistep methods, Runge-Kutta and predictor-corrector methods, boundary value problems, eigenvalue problems; systems of differential equations, stiffness. Emphasis is on analysis of numerical methods for accuracy, stability, and convergence. Introduction to numerical solutions of partial differential equations; Von Neumann stability analysis; alternating direction implicit methods and nonlinear equations. Prerequisites: CME 200/ME 300A, CME 204/ME 300B.
CME207 | Numerical Methods in Engineering and Applied Sciences | http://CME207.stanford.edu | instructors:Suckale, J. (PI); Witherden, F. (PI); Elsworth, C. (TA); Leibovich, M. (TA) description:Scientific computing and numerical analysis for physical sciences and engineering. Advanced version of CME206 that, apart from CME206 material, includes nonlinear PDEs, multidimensional interpolation and integration and an extended discussion of stability for initial boundary value problems. Recommended for students who have some prior numerical analysis experience. Topics include: 1D and multi-D interpolation, numerical integration in 1D and multi-D including adaptive quadrature, numerical solutions of ordinary differential equations (ODEs) including stability, numerical solutions of 1D and multi-D linear and nonlinear partial differential equations (PDEs) including concepts of stability and accuracy. Prerequisites: linear algebra, introductory numerical analysis (CME 108 or equivalent).
CME211 | Software Development for Scientists and Engineers | http://CME211.stanford.edu | instructors:Peles, S. (PI); Santucci, A. (PI); Chen, K. (TA); Habot, N. (TA); Subbiah, V. (TA); Tsaptsinos, A. (TA) description:Basic usage of the Python and C/C++ programming languages are introduced and used to solve representative computational problems from various science and engineering disciplines. Software design principles including time and space complexity analysis, data structures, object-oriented design, decomposition, encapsulation, and modularity are emphasized. Usage of campus wide Linux compute resources: login, file system navigation, editing files, compiling and linking, file transfer, etc. Versioning and revision control, software build utilities, and the LaTeX typesetting software are introduced and used to help complete programming assignments. Prerequisite: introductory programming course equivalent to CS 106A or instructor consent.
CME212 | Advanced Software Development for Scientists and Engineers | http://CME212.stanford.edu | instructors:Peles, S. (PI); Santucci, A. (PI); Habot, N. (TA); Lazarus Garcia, C. (TA); Subbiah, V. (TA); Tsaptsinos, A. (TA) description:Advanced topics in software development, debugging, and performance optimization are covered. The capabilities and usage of common libraries and frameworks such as BLAS, LAPACK, FFT, PETSc, and MKL/ACML are reviewed. Computer representation of integer and floating point numbers, and interoperability between C/C++ and Fortran is described. More advanced software engineering topics including: representing data in files, signals, unit and regression testing, and build automation. The use of debugging tools including static analysis, gdb, and Valgrind are introduced. An introduction to computer architecture covering processors, memory hierarchy, storage, and networking provides a foundation for understanding software performance. Profiles generated using gprof and perf are used to help guide the performance optimization process. Computational problems from various science and engineering disciplines will be used in assignments. Prerequisites: CME 200 / ME 300A and CME 211.
CME213 | Introduction to parallel computing using MPI, openMP, and CUDA | http://CME213.stanford.edu | instructors:Darve, E. (PI); Ahn, S. (TA); Chen, C. (TA); Tsaptsinos, A. (TA) description:This class will give  hands on experience with programming multicore processors, graphics processing units (GPU), and parallel computers. Focus will be on the message passing interface (MPI, parallel clusters) and the compute unified device architecture (CUDA, GPU). Topics will include: network topologies, modeling communication times, collective communication operations, parallel efficiency, MPI, dense linear algebra using MPI. Symmetric multiprocessing (SMP), pthreads, openMP. CUDA, combining MPI and CUDA, dense linear algebra using CUDA, sort, reduce and scan using CUDA. Pre-requisites include: C programming language and numerical algorithms (solution of differential equations, linear algebra, Fourier transforms).
CME214 | Software Design in Modern Fortran for Scientists and Engineers | http://CME214.stanford.edu | instructors: description:This course introduces software design and development in modern Fortran. Course covers the functional, object-oriented-, and parallel programming features introduced in the Fortran 95, 2003, and 2008 standards, respectively, in the context of numerical approximations to ordinary and partial differential equations; introduces object-oriented design and design schematics based on the Unified Modeling Language (UML) structure, behavior, and interaction diagrams; cover the basic use of several open-source tools for software building, testing, documentation generation, and revision control. Recommended: Familiarity with programming in Fortran 90, basic numerical analysis and linear algebra, or instructor approval
CME232 | Introduction to Computational Mechanics | http://CME232.stanford.edu | instructors:Pinsky, P. (PI); Yin, Q. (TA) description:Provides an introductory overview of modern computational methods for problems arising primarily in mechanics of solids and is intended for students from various engineering disciplines.  The course reviews the basic theory of linear solid mechanics and introduces students to the important concept of variational forms, including the principle of minimum potential energy and the principles of virtual work. Specific model problems that will be considered include deformation of bars, beams and membranes, plates, and problems in plane elasticity (plane stress, plane strain, axisymmetric elasticity). The variational forms of these problems are used as the starting point for developing the finite element method (FEM) and boundary element method (BEM) approaches ­ providing an important connection between mechanics and computational methods.
CME244 | Project Course in Mathematical and Computational Finance | http://CME244.stanford.edu | instructors: description:For graduate students in the MCF track; students will work individually or in groups on research projects.
CME251 | Geometric and Topological Data Analysis | http://CME251.stanford.edu | instructors:Guibas, L. (PI); Achlioptas, P. (TA); Ganapathi-Subramanian, V. (TA) description:Mathematical computational tools for the analysis of data with geometric content, such images, videos, 3D scans, GPS traces -- as well as for other data embedded into geometric spaces. Global and local geometry descriptors allowing for various kinds of invariances. The rudiments of computational topology and persistent homology on sampled spaces. Clustering and other unsupervised techniques. Spectral methods for geometric data analysis. Non-linear dimensionality reduction. Alignment, matching, and map computation between geometric data sets. Function spaces and functional maps.Networks of data sets and joint analysis for segmentation and labeling. The emergence of abstractions or concepts from data. Prerequisites: discrete algorithms at the level of 161; linear algebra at the level of CME103.
CME257 | Advanced Topics in Scientific Computing with Julia | http://CME257.stanford.edu | instructors:Nelson, B. (PI) description:This course will rapidly introduce students to the Julia programming language, with the goal of giving students the knowledge and experience necessary to navigate the language and package ecosystem while using Julia for their own scientific computing needs. The course will begin with learning the basics of Julia, and then introduce students to git version control and package development. Additional topics include: common packages, parallelism, interfacing with shared object libraries, and aspects of Julia's implementation (e.g. core numerical linear algebra). Lectures will be interactive, with an emphasis on collaboration and learning by example. Prerequisites: Data structures at the level of CS106B, experience with one or more scientific computing languages (e.g. Python, Matlab, or R), and some familiarity with the Unix shell. No prior experience with Julia or git is required.
CME258 | Libraries for Numerical Linear Algebra and Optimization | http://CME258.stanford.edu | instructors:Estrin, R. (PI); Nelson, B. (PI) description:This course will cover standard libraries commonly used for numerical linear algebra and optimization, with an emphasis on giving students experience with using the libraries on real examples.  The course will cover software for direct methods (BLAS, Atlas, LAPACK, Eigen), iterative methods (ARPACK, Krylov Methods), and linear/nonlinear optimization (MINOS, SNOPT). Prerequisites: at least one course in numerical linear algebra (preferably at the level of CME 200 or CME 302), and one course in numerical optimization, as well as experience with at least one compiled language such as C/C++/Fortran.
CME262 | Imaging with Incomplete Information | http://CME262.stanford.edu | instructors:Kitanidis, P. (PI) description:Statistical and computational methods for inferring images from incomplete data. Bayesian inference methods are used to combine data and quantify uncertainty in the estimate.  Fast linear algebra tools are used to solve problems with many pixels and many observations.  Applications from several fields but mainly in earth sciences.  Prerequisites: Linear algebra and probability theory.
CME263 | Introduction to Linear Dynamical Systems | http://CME263.stanford.edu | instructors:Nasiri Mahalati, R. (PI); Shah, K. (PI); Aboumrad, G. (TA); Chemparathy, A. (TA); Kossyrev, M. (TA); Momeni, A. (TA); Shah, K. (TA); Zhou, Z. (TA) description:Applied linear algebra and linear dynamical systems with applications to circuits, signal processing, communications, and control systems. Topics: least-squares approximations of over-determined equations, and least-norm solutions of underdetermined equations. Symmetric matrices, matrix norm, and singular-value decomposition. Eigenvalues, left and right eigenvectors, with dynamical interpretation. Matrix exponential, stability, and asymptotic behavior. Multi-input/multi-output systems, impulse and step matrices; convolution and transfer-matrix descriptions. Control, reachability, and state transfer; observability and least-squares state estimation. Prerequisites: Linear algebra and matrices as in EE 103 or MATH 104; ordinary differential equations and Laplace transforms as in EE 102B or CME 102.
CME279 | Computational Biology: Structure and Organization of Biomolecules and Cells | http://CME279.stanford.edu | instructors:Dror, R. (PI); Bedi, R. (TA); El-Gabalawy, O. (TA); Fernandes, D. (TA); Paggi, J. (TA); Sanborn, A. (TA) description:Computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules and cells.  These computational methods play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course topics include protein structure prediction, protein design, drug screening, molecular simulation, cellular-level simulation, image analysis for microscopy, and methods for solving structures from crystallography and electron microscopy data.  Prerequisites: elementary programming background (CS 106A or equivalent) and an introductory course in biology or biochemistry.
CME291 | Master's Research | http://CME291.stanford.edu | instructors:Begenau, J. (PI); Biondi, B. (PI); Bosagh Zadeh, R. (PI); Boyd, S. (PI); Carlsson, G. (PI); Darve, E. (PI); Farhat, C. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Glynn, P. (PI); Gous, A. (PI); Grundfest, J. (PI); Guibas, L. (PI); Kahn, S. (PI); Lai, T. (PI); Leskovec, J. (PI); Ng, A. (PI); Papanicolaou, G. (PI); Pelger, M. (PI); Rajagopal, R. (PI); Re, C. (PI); Schwartzman, A. (PI); Suckale, J. (PI); Ying, L. (PI); Gallegos, Y. (GP) description:Students require faculty sponsor. (Staff)
CME292 | Advanced MATLAB for Scientific Computing | http://CME292.stanford.edu | instructors:Maddix, D. (PI) description:Short course running first four weeks of the quarter (8 lectures) with interactive online lectures and application based assignment. Students will access the lectures and assignments on https://suclass.stanford.edu. Students will be introduced to advanced MATLAB features, syntaxes, and toolboxes not traditionally found in introductory courses. Material will be reinforced with in-class examples, demos, and homework assignment involving topics from scientific computing. MATLAB topics will be drawn from: advanced graphics (2D/3D plotting, graphics handles, publication quality graphics, animation), MATLAB tools (debugger, profiler), code optimization (vectorization, memory management), object-oriented programming, compiled MATLAB (MEX files and MATLAB coder), interfacing with external programs, toolboxes (optimization, parallel computing, symbolic math, PDEs). Scientific computing topics will include: numerical linear algebra, numerical optimization, ODEs, and PDEs.
CME298 | Basic Probability and Stochastic Processes with Engineering Applications | http://CME298.stanford.edu | instructors:Ying, L. (PI) description:Calculus of random variables and their distributions with applications. Review of limit theorems of probability and their application to statistical estimation and basic Monte Carlo methods. Introduction to Markov chains, random walks, Brownian motion and basic stochastic differential equations with emphasis on applications from economics, physics and engineering, such as  filtering and control. Prerequisites: exposure to basic probability.
CME300 | First Year Seminar Series | http://CME300.stanford.edu | instructors:Gerritsen, M. (PI) description:Required for first-year ICME Ph.D. students; recommended for first-year ICME M.S. students. Presentations about research at Stanford by faculty and researchers from Engineering, H&S, and organizations external to Stanford. May be repeated for credit.
CME302 | Numerical Linear Algebra | http://CME302.stanford.edu | instructors:Darve, E. (PI); Cambier, L. (TA); Estrin, R. (TA); Mohammad, H. (TA); Sohoni, N. (TA) description:Solution of linear systems, accuracy, stability, LU, Cholesky, QR, least squares problems, singular value decomposition, eigenvalue computation, iterative methods, Krylov subspace, Lanczos and Arnoldi processes, conjugate gradient, GMRES, direct methods for sparse matrices. Prerequisites: CME 108, MATH 114, MATH 104.
CME303 | Partial Differential Equations of Applied Mathematics | http://CME303.stanford.edu | instructors:Ryzhik, L. (PI); Liu, F. (TA) description:First-order partial differential equations; method of characteristics; weak solutions; elliptic, parabolic, and hyperbolic equations; Fourier transform; Fourier series; and eigenvalue problems. Prerequisite: Basic coursework in multivariable calculus and ordinary differential equations, and some prior experience with a proof-based treatment of the material as in Math 171 or Math 61CM (formerly Math 51H).
CME305 | Discrete Mathematics and Algorithms | http://CME305.stanford.edu | instructors:Sidford, A. (PI); Ganesan, A. (TA); Jambulapati, A. (TA); Skochdopole, N. (TA) description:Topics: Basic Algebraic Graph Theory, Matroids and Minimum Spanning Trees, Submodularity and Maximum Flow, NP-Hardness, Approximation Algorithms, Randomized Algorithms, The Probabilistic Method, and Spectral Sparsification using Effective Resistances. Topics will be illustrated with applications from Distributed Computing, Machine Learning, and large-scale Optimization. Prerequisites: CS 261 is highly recommended, although not required.
CME306 | Numerical Solution of Partial Differential Equations | http://CME306.stanford.edu | instructors:Ying, L. (PI) description:Hyperbolic partial differential equations: stability, convergence and qualitative properties; nonlinear hyperbolic equations and systems; combined solution methods from elliptic, parabolic, and hyperbolic problems. Examples include: Burger's equation, Euler equations for compressible flow, Navier-Stokes equations for incompressible flow. Prerequisites: MATH 220A or CME 302.
CME307 | Optimization | http://CME307.stanford.edu | instructors:Ye, Y. (PI); Estrin, R. (GP); Klockiewicz, B. (GP); Zhang, J. (GP) description:Applications, theories, and algorithms for finite-dimensional linear and nonlinear optimization problems with continuous variables. Elements of convex analysis, first- and second-order optimality conditions, sensitivity and duality. Algorithms for unconstrained optimization, and linearly and nonlinearly constrained problems. Modern applications in communication, game theory, auction, and economics. Prerequisites: MATH 113, 115, or equivalent.
CME308 | Stochastic Methods in Engineering | http://CME308.stanford.edu | instructors:Glynn, P. (PI); Infanger, A. (GP) description:The basic limit theorems of probability theory and their application to maximum likelihood estimation. Basic Monte Carlo methods and importance sampling.  Markov chains and processes, random walks, basic ergodic theory and its application to parameter estimation. Discrete time stochastic control and Bayesian filtering. Diffusion approximations, Brownian motion and an introduction to stochastic differential equations. Examples and problems from various applied areas. Prerequisites: exposure to probability and background in analysis.
CME309 | Randomized Algorithms and Probabilistic Analysis | http://CME309.stanford.edu | instructors:Valiant, G. (PI); Chatziafratis, V. (TA); McIntire, M. (TA); Zhang, H. (TA) description:Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.
CME323 | Distributed Algorithms and Optimization | http://CME323.stanford.edu | instructors:Bosagh Zadeh, R. (PI); Arora, Y. (TA) description:The emergence of clusters of commodity machines with parallel processing units has brought with it a slew of new algorithms and tools. Many fields such as Machine Learning and Optimization have adapted their algorithms to handle such clusters. Topics include distributed and parallel algorithms for: Optimization, Numerical Linear Algebra, Machine Learning, Graph analysis, Streaming algorithms, and other problems that are challenging to scale on a commodity cluster. The class will focus on analyzing parallel and distributed programs, with some implementation using Apache Spark and TensorFlow.
CME330 | Applied Mathematics in the Chemical and Biological Sciences | http://CME330.stanford.edu | instructors:Spakowitz, A. (PI); Asundi, A. (TA); Binagia, J. (TA) description:Mathematical solution methods via applied problems including chemical reaction sequences, mass and heat transfer in chemical reactors, quantum mechanics, fluid mechanics of reacting systems, and chromatography. Topics include generalized vector space theory, linear operator theory with eigenvalue methods, phase plane methods, perturbation theory (regular and singular), solution of parabolic and elliptic partial differential equations, and transform methods (Laplace and Fourier). Prerequisites: CME 102/ENGR 155A and CME 104/ENGR 155B, or equivalents.
CME338 | Large-Scale Numerical Optimization | http://CME338.stanford.edu | instructors:Saunders, M. (PI); Choudhury, I. (GP) description:The main algorithms and software for constrained optimization emphasizing the sparse-matrix methods needed for their implementation. Iterative methods for linear equations and least squares. The simplex method. Basis factorization and updates. Interior methods. The reduced-gradient method, augmented Lagrangian methods, and SQP methods. Prerequisites: Basic numerical linear algebra, including LU, QR, and SVD factorizations, and an interest in MATLAB, sparse-matrix methods, and gradient-based algorithms for constrained optimization. Recommended: MS&E 310, 311, 312, 314, or 315; CME 108, 200,  302, 304, 334, or 335.
CME364A | Convex Optimization I | http://CME364A.stanford.edu | instructors:Lall, S. (PI); Pathak, R. (PI); Angeris, G. (TA); Choudhary, D. (TA); Gu, A. (TA); Jiang, Q. (TA); Kim, J. (TA); Mani, N. (TA); Momeni, A. (TA); Pathak, R. (TA); Shah, K. (TA); Song, R. (TA); Tefagh, M. (TA) description:Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.
CME364B | Convex Optimization II | http://CME364B.stanford.edu | instructors:Duchi, J. (PI); Carmon, Y. (TA) description:Continuation of 364A. Subgradient, cutting-plane, and ellipsoid methods. Decentralized convex optimization via primal and dual decomposition. Monotone operators and proximal methods; alternating direction method of multipliers.  Exploiting problem structure in implementation. Convex relaxations of hard problems. Global optimization via branch and bound. Robust and stochastic optimization. Applications in areas such as control, circuit design, signal processing, and communications. Course requirements include project. Prerequisite: 364A.
CME371 | Computational Biology in Four Dimensions | http://CME371.stanford.edu | instructors:Dror, R. (PI); Bedi, R. (GP); Fernandes, D. (GP) description:Cutting-edge research on computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules, cells, and everything in between.  These techniques, which draw on approaches ranging from physics-based simulation to machine learning, play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course is devoted primarily to reading, presentation, discussion, and critique of papers describing important recent research developments.  Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course).
CME390 | Curricular Practical Training | http://CME390.stanford.edu | instructors:Giesecke, K. (PI); Iaccarino, G. (PI) description:Educational opportunities in high technology research and development labs in applied mathematics. Qualified ICME students engage in internship work and integrate that work into their academic program. Students register during the quarter they are employed and complete a research report outlining their work activity, problems investigated, results, and follow-on projects they expect to perform. May be repeated three times for credit.
CME399 | Special Research Topics in Computational and Mathematical Engineering | http://CME399.stanford.edu | instructors:Boyd, S. (PI); Candes, E. (PI); Carlsson, G. (PI); Darve, E. (PI); Gerritsen, M. (PI); Hastie, T. (PI); Kamvar, S. (PI); Levi, O. (PI) description:Graduate-level research work not related to report, thesis, or dissertation. May be repeated for credit.
CME400 | Ph.D. Research | http://CME400.stanford.edu | instructors:Beroza, G. (PI); Bimpikis, K. (PI); Biondi, B. (PI); Blanchet Mancilla, J. (PI); Bosagh Zadeh, R. (PI); Boyd, S. (PI); Bump, D. (PI); Bustamante, C. (PI); Candes, E. (PI); Carlsson, G. (PI); Darve, E. (PI); Dror, R. (PI); Farhat, C. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Guibas, L. (PI); Hastie, T. (PI); Holmes, S. (PI); Iaccarino, G. (PI); James, D. (PI); Johari, R. (PI); Kahn, S. (PI); Khatri, P. (PI); Lai, T. (PI); Leskovec, J. (PI); Lobell, D. (PI); Marsden, A. (PI); Moin, P. (PI); Montanari, A. (PI); Papanicolaou, G. (PI); Rajagopal, R. (PI); Re, C. (PI); Reed, E. (PI); Ryzhik, L. (PI); Saban, D. (PI); Saberi, A. (PI); Saunders, M. (PI); Sidford, A. (PI); Suckale, J. (PI); Tibshirani, R. (PI); Wong, W. (PI); Xing, L. (PI); Ye, Y. (PI); Ying, L. (PI); Gallegos, Y. (GP); Kanagawa, K. (GP) description:
CME444 | Computational Consulting | http://CME444.stanford.edu | instructors: description:Advice by graduate students under supervision of ICME faculty. Weekly briefings with faculty adviser and associated faculty to discuss ongoing consultancy projects and evaluate solutions. May be repeated for credit.
CME500 | Departmental Seminar | http://CME500.stanford.edu | instructors:Gerritsen, M. (PI) description:Weekly research lectures by doctoral students, experts from academia, national laboratories, and industry. May be repeated for credit.
CME510 | Linear Algebra and Optimization Seminar | http://CME510.stanford.edu | instructors:Saunders, M. (PI) description:Recent developments in numerical linear algebra and numerical optimization. Guest speakers from other institutions and local industry. Goal is to bring together scientists from different theoretical and application fields to solve complex scientific computing problems. May be repeated for credit.
CME801 | TGR Project | http://CME801.stanford.edu | instructors: description:
CME802 | TGR Dissertation | http://CME802.stanford.edu | instructors:Beroza, G. (PI); Biondi, B. (PI); Boyd, S. (PI); Bustamante, C. (PI); Candes, E. (PI); Carlsson, G. (PI); Darve, E. (PI); Farhat, C. (PI); Gerritsen, M. (PI); Giesecke, K. (PI); Guibas, L. (PI); Holmes, S. (PI); Iaccarino, G. (PI); Johari, R. (PI); Lai, T. (PI); Leskovec, J. (PI); Marsden, A. (PI); Moin, P. (PI); Papanicolaou, G. (PI); Rajagopal, R. (PI); Re, C. (PI); Reed, E. (PI); Saberi, A. (PI); Saunders, M. (PI); Tibshirani, R. (PI); Wong, W. (PI); Ying, L. (PI); Gallegos, Y. (GP); Kanagawa, K. (GP) description:
